# **************************** Global planners ****************************

# ----- navfn/NavfnROS -----
NavfnROS:
  visualize_potential: false
  allow_unknown: true # Specifies whether or not to allow navfn to create plans that traverse unknown space.
  default_tolerance: 0.1 # A tolerance on the goal point for the planner.

# **************************** Local planners ****************************

# ----- dwa_local_planner/DWAPlannerROS -----
DWAPlannerROS:
  global_frame_id: $(arg global_frame)

  # Robot configuration parameters
  max_vel_trans: 0.8
  min_vel_trans: 0.0
  max_vel_x: 0.8
  min_vel_x: -0.3
  max_vel_y: 0.25
  min_vel_y: -0.25
  max_vel_theta: 0.5
  min_vel_theta: 0.25
  acc_lim_x: 2.0
  acc_lim_y: 2.0
  acc_lim_theta: 3.0
  acc_lim_trans: 2.0

  prune_plan: false

  latch_xy_goal_tolerance: true
  xy_goal_tolerance: 0.25
  yaw_goal_tolerance: 0.1

  trans_stopped_vel: 0.2
  theta_stopped_vel: 0.2
  sim_time: 3.0
  sim_granularity: 0.1
  angular_sim_granularity: 0.1
  path_distance_bias: 34.0
  goal_distance_bias: 24.0
  occdist_scale: 0.05
  twirling_scale: 0.0
  stop_time_buffer: 0.5
  oscillation_reset_dist: 0.1
  oscillation_reset_angle: 1.0
  forward_point_distance: 0.2
  scaling_speed: 0.25
  max_scaling_factor: 0.2
  vx_samples: 20
  vy_samples: 0
  vth_samples: 40

  use_dwa: true
  #restore_defaults: true

# ----- teb_local_planner/TebLocalPlannerROS -----
TebLocalPlannerROS:
  odom_topic: $(arg odom_frame)
  map_frame: $(arg global_frame)

  # Trajectory
  teb_autosize: true
  dt_ref: 0.3
  dt_hysteresis: 0.1
  min_samples: 3
  global_plan_overwrite_orientation: true
  global_plan_viapoint_sep: 0.5 # negative, do not use viapoints. positive, use them. the actual value does not matter
  max_global_plan_lookahead_dist: 3.0
  force_reinit_new_goal_dist: 1.0
  feasibility_check_no_poses: 5
  publish_feedback: false
  shrink_horizon_backup: true
  allow_init_with_backwards_motion: true
  exact_arc_length: false
  shrink_horizon_min_duration: 10

  # Robot
  max_vel_x: 0.8
  max_vel_x_backwards: 0.15
  max_vel_theta: 0.5
  max_vel_y: 0.5
  acc_lim_y: 3.0
  acc_lim_x: 3.0
  acc_lim_theta: 4.0
  min_turning_radius: 0.0
  wheelbase: 0.0
  cmd_angle_instead_rotvel: false
  footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
    type: "polygon"
    vertices: [ [0.3, 0.2 ], [0.3, -0.2], [-0.3, -0.2], [-0.3, 0.2] ]

  # GoalTolerance
  xy_goal_tolerance: 0.3
  yaw_goal_tolerance: 0.2
  free_goal_vel: false

  # Obstacles
  min_obstacle_dist: 0.30 # minimum distance to obstacle: it depends on the footprint_model
  include_costmap_obstacles: true # use the local costmap
  costmap_obstacles_behind_robot_dist: 1.0 # distance at which obstacles behind the robot are taken into account
  obstacle_poses_affected: 30 # unused if legacy_obstacle_association is false
  inflation_dist: 0.7 # greater than min_obstacle_dist to take effect
  legacy_obstacle_association: false
  obstacle_association_force_inclusion_factor: 1.5 # the obstacles that will be taken into account are those closer than min_obstacle_dist*factor, if legacy is false
  obstacle_association_cutoff_factor: 5.0 # the obstacles that are further than min_obstacle_dist * factor will not be taken into account, if legacy is false
  costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSMCCH"
  costmap_converter_spin_thread: true
  costmap_converter_rate: 5

  # Optimization
  no_inner_iterations: 5
  no_outer_iterations: 4
  optimization_activate: true # optimize
  optimization_verbose: false
  penalty_epsilon: 0.1
  weight_max_vel_x: 20
  weight_max_vel_y: 20
  weight_max_vel_theta: 20
  weight_acc_lim_x: 1
  weight_acc_lim_y: 1
  weight_acc_lim_theta: 1
  weight_kinematics_nh: 10 # is a nonholonomic robot
  weight_kinematics_forward_drive: 50 # prefer forward driving, for differential
  weight_kinematics_turning_radius: 1 # prefer turns that respect the min_turning_radius, not used if differential (min_turning_radius = 0)
  weight_optimaltime: 10 # prefer trajectories with less transition time
  weight_obstacle: 50 # prefer trajectories that respect the min_obstacle_dist
  weight_inflation: 1 # prefer trajectories that respect the inflation of the obstacles
  #weight_dynamic_obstacle: 10 # not in use yet
  weight_viapoint: 100 # prefer trajectories that respect the viapoints in the global path
  weight_adapt_factor: 2 # factor to multiply some weights (currently only weight_obstacle) at each iteration (gives better results than a huge value for the weight)

  # Homotopy Class Planner
  enable_homotopy_class_planning: false # currently not used
  simple_exploration: false
  enable_multithreading: true
  max_number_classes: 4
  selection_cost_hysteresis: 1.0
  selection_obst_cost_scale: 4.0
  selection_viapoint_cost_scale: 1.0
  selection_alternative_time_cost: false
  roadmap_graph_no_samples: 15
  roadmap_graph_area_width: 6
  h_signature_prescaler: 1.0
  h_signature_threshold: 0.1
  obstacle_heading_threshold: 0.45
  roadmap_graph_no_samples: 15
  roadmap_graph_area_width: 5
  obstacle_keypoint_offset: 0.1
  visualize_hc_graph: false

